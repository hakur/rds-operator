kind: Mysql
apiVersion: rds.hakurei.cn/v1alpha1
metadata:
  name: yuxing
spec:
  imagePullPolicy: IfNotPresent
  rootPassword: MTIzNDU2
  clusterMode: MGRSP
  storageClassName: hostpath
  timeZone: Asia/Shanghai
  configImage: rumia/rds-sidecar:v0.0.1
  image: mysql/mysql-server:5.7.34
  replicas: 3
  storageSize: 1Gi
  maxConn: 300
  whitelist: # most of time , it's kubernetes Pod CIDR and Service CIDR
    - "10.0.0.0/8"
  extraConfigDir: /etc/my.cnf.d/
  clusterUser: # user will create when mysql initialization
    username: replication
    password: cmVwbGljYXRpb25fcGFzc3dvcmQ=
    databaseTarget: "*.*"
    domain: "%"
    privileges:
    - "REPLICATION SLAVE"
    - "REPLICATION CLIENT"
    - "SELECT"
    - "SUPER"
    - "USAGE"
    
    # readinessProbe:
    #   exec:
    #     command:
    #     - /bin/bash
    #     - -c
    #     - |
    #       mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD} > /dev/null 2>&1
    #       if [ $? != 0 ];then
    #         echo "mysql 3306 not ready"
    #         exit 1
    #       fi
    #   initialDelaySeconds: 5
    #   periodSeconds: 5
    #   timeoutSeconds: 4
    #   failureThreshold: 10
    # livenessProbe:
    #   exec:
    #     command:
    #     - /bin/bash
    #     - -c
    #     - |
    #       primaryServer=$(mysql -uroot -p${MYSQL_ROOT_PASSWORD} -N -s -e "show status like 'group_replication_primary_member';" | awk '{print $2}')
    #       if [ "$primaryServer" != "" ];then
    #         exit 0
    #       fi
    #       echo "mysql primary server not found, mgr cluster not health!"
    #       exit 1
    #   initialDelaySeconds: 5
    #   periodSeconds: 5
    #   timeoutSeconds: 4
    #   failureThreshold: 10
  
---
apiVersion: rds.hakurei.cn/v1alpha1
kind: ProxySQL
metadata:
  name: mgrsp
spec:
  configImage: rumia/rds-sidecar:i8
  storageClassName: hostpath
  timeZone: Asia/Shanghai
  image: proxysql/proxysql:2.3.2
  mysqlVersion: "5.7.34"
  nodePort: 32337 #set to zero if want use random nodeport,delete this field will disable nodeport
  storageSize: 1Gi
  replicas: 3
  mysqls:
    crd: # connect mysql.rds.hakurei.cn/v1alpha1 pods
      name: yuxing 
  mysqlMaxConn: 200
  clusterMode: MGRSP
  monitorUser:
    username: replication # user on mysql server that you need create
    password: cmVwbGljYXRpb25fcGFzc3dvcmQ=
  clusterUser: # cluster user must exists and has same password in adminUsers
    username: yuxing # user will auto create on proxysql server by operator
    password: cmVwbGljYXRpb25fcGFzc3dvcmQ=
  adminUsers: # most times, only need two user
  - username: admin # user admin could not remote login
    password: cmVwbGljYXRpb25fcGFzc3dvcmQ=
  - username: yuxing # other user can remote login, operator use this user to management proxysql servers
    password: cmVwbGljYXRpb25fcGFzc3dvcmQ=
  backendUsers:
  - username: root # user on mysql server that you need create, then proxysql use this user exec sql query
    password: MTIzNDU2
    defaultHostGroup: 10
  frontedUsers:
  - username: root # user auto create on proxysql server by operator, mysql client use theese user exec sql query
    password: MTIzNDU2
    defaultHostGroup: 10